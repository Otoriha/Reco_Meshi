# fly.toml app configuration file generated for reco-meshi
# See https://fly.io/docs/reference/configuration/ for information about how to use this file.

app = 'reco-meshi-api'
primary_region = 'nrt'  # Tokyo region
console_command = '/rails/bin/rails console'
kill_signal = "SIGTERM"
kill_timeout = 30

[build]
  dockerfile = "Dockerfile"

[deploy]
  release_command = 'bash -c "./bin/rails db:prepare && ./bin/rails db:seed"'

[env]
  PORT = '3000'
  RAILS_LOG_TO_STDOUT = 'true'
  RAILS_SERVE_STATIC_FILES = 'true'
  # CORS settings - Production URLs
  FRONTEND_URL = 'https://reco-meshiweb.vercel.app'
  LIFF_URL = 'https://reco-meshi.vercel.app'
  # Allow Vercel preview deployments (set to "false" in production)
  ALLOW_VERCEL_PREVIEW = 'false'

[http_service]
  internal_port = 3000
  force_https = true
  auto_stop_machines = false
  auto_start_machines = true
  min_machines_running = 1
  processes = ['app']

  [http_service.concurrency]
    type = 'connections'
    hard_limit = 25
    soft_limit = 20

[[vm]]
  memory = '512mb'
  cpu_kind = 'shared'
  cpus = 1
  processes = ['app']

[[vm]]
  memory = '256mb'
  cpu_kind = 'shared'
  cpus = 1
  processes = ['worker']

[mounts]
  source = "data"
  destination = "/data"

[[statics]]
  guest_path = '/rails/public'
  url_prefix = '/'

[checks]
  [checks.status]
    port = 3000
    type = 'http'
    interval = '20s'
    timeout = '10s'
    grace_period = '60s'
    method = 'GET'
    path = '/up'
    protocol = 'http'
    tls_skip_verify = false
    
    [checks.status.headers]
      X-Forwarded-Proto = 'https'

# Sidekiq worker process (optional - comment out if not using background jobs)
[processes]
  app = ''
  worker = 'bundle exec sidekiq'

# Sidekiq worker doesn't need HTTP service or health checks
# Remove or comment out the services section for worker